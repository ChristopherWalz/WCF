const container = document.createElement("div");
container.id = "pageOverlayContainer";

const adoptiveParents: HTMLElement[] = [];

/**
 * Adopts the page overlay container by moving it inside
 * the provided element. Required for dialogs using the
 * native `<dialog>` element to escape the top-level
 * backdrop generated by the browser.
 */
export function adoptPageOverlayContainer(element: HTMLElement): void {
  adoptiveParents.push(element);

  element.append(container);
}

/**
 * Releases the page overlay container again, allowing
 * it to return to its previous position. Must be called
 * in reverse order to ensure the correct placement.
 */
export function releasePageOverlayContainer(element: HTMLElement): void {
  const currentParent = adoptiveParents.pop();
  if (element !== currentParent) {
    throw new Error("Invalid call, cannot release the page overlay while it is still adopted by another element.", {
      cause: {
        currentParent,
        element,
      },
    });
  }

  const previousParent = adoptiveParents[adoptiveParents.length - 1];
  if (previousParent === undefined) {
    throw new Error("Cannot release the page overlay, there is no previous owner.", {
      cause: {
        element,
      },
    });
  }

  previousParent.append(container);
}

/**
 * Returns the global page overlay container used for
 * elements that should be displayed out of context,
 * such as tooltips or drop-down menus.
 */
export function getPageOverlayContainer(): HTMLElement {
  return container;
}
