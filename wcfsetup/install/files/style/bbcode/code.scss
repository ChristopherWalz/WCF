.codeBox {
	background-color: var(--wcfContentBackground);
	box-shadow: 0 0 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
	border-radius: 2px;
	clear: both;
	margin: 1em 0;
	padding: 10px;
	position: relative;

	&.collapsed {
		.codeBoxCode {
			max-height: 200px;
			overflow: hidden;
		}

		> .toggleButton {
			bottom: 0;
			left: 0;
			padding-bottom: 10px;
			position: absolute;
			right: 0;
			z-index: 1;

			&::before {
				background-image: linear-gradient(
					to top,
					rgba(var(--wcfContentBackground-rgb) / 0.9),
					rgba(var(--wcfContentBackground-rgb) / 0)
				);
				content: "";
				height: 60px;
				left: 0;
				pointer-events: none;
				position: absolute;
				right: 0;
				top: -60px;
			}
		}
	}

	.codeBoxHeader {
		position: sticky;
		top: 50px;
		z-index: 1;
		padding: 10px 10px 10px;
		margin: -10px -10px 0;
		background-color: var(--wcfContentBackground);

		align-items: center;
		display: flex;

		/* required to avoid layout jumping caused by the dynamically added 24px button */
		min-height: 24px;

		> .codeBoxHeadline {
			flex: 1 1 auto;
			margin-right: 10px;

			@include wcfFontHeadline;

			@include screen-sm-down {
				overflow: auto;
				white-space: nowrap;
			}
		}

		.icon {
			flex: 0 0 auto;

			&:not(:last-child) {
				margin-right: 10px;
			}
		}
	}

	.codeBoxCode {
		position: relative;
		padding-left: 7ch;

		> code {
			display: block;
			overflow-x: auto;
			font-family: var(--wcfFontFamilyMonospace);
			font-size: 14px;

			.codeBoxLine {
				display: block;

				> a {
					margin-left: -7ch;
					overflow: hidden;
					position: absolute;
					text-align: right;
					text-overflow: ellipsis;
					white-space: nowrap;
					/* No one has line numbers greater than 999999 */
					width: 6ch;

					&::before {
						content: attr(title);
					}
				}

				> span {
					white-space: pre;

					/* Prevent empty lines from collapsing. */
					&:empty {
						display: inline-block;
					}

					@include screen-md-up {
						white-space: pre-wrap;
						word-break: break-all;
					}
				}

				&:target {
					background-color: rgba(255, 255, 102, 1);
				}
			}
		}
	}

	> .toggleButton {
		background-color: rgba(var(--wcfContentBackground-rgb) / 0.9);
		cursor: pointer;
		display: block;
		padding: 10px 20px 0 10px;
		text-align: center;

		@include wcfFontSmall;
	}
}

.quoteBoxContent .codeBox .codeBoxHeader {
	/*
		The quote box has its own stacking context, causing the `top` value
	    to be relative to the quote box and not the document body.
	    See https://community.woltlab.com/thread/293105-quelltext-innerhalb-eines-zitates-wird-teilweise-abgeschnitten/
	*/
	top: 0;
}

.anchorFixedHeader:not(.disableAnchorFixedHeader):target .codeBoxHeader {
	top: -30px; /* see wsc31.scss */
}

.dialogContent .codeBox .codeBoxHeader {
	/* Prevent the header being sticky inside dialogs, which doesn't really work.  */
	position: static;
}

html[data-color-scheme="light"] {
	/* PrismJS 1.29.0
	https://prismjs.com/download.html#themes=prism */
	/**
	* prism.js default theme for JavaScript, CSS and HTML
	* Based on dabblet (http://dabblet.com)
	* @author Lea Verou
	*/

	.prism-token.prism-comment,
	.prism-token.prism-prolog,
	.prism-token.prism-doctype,
	.prism-token.prism-cdata {
		color: slategray;
	}

	.prism-token.prism-punctuation {
		color: #999;
	}

	.prism-token.prism-namespace {
		opacity: 0.7;
	}

	.prism-token.prism-property,
	.prism-token.prism-tag,
	.prism-token.prism-boolean,
	.prism-token.prism-number,
	.prism-token.prism-constant,
	.prism-token.prism-symbol,
	.prism-token.prism-deleted {
		color: #905;
	}

	.prism-token.prism-selector,
	.prism-token.prism-attr-name,
	.prism-token.prism-string,
	.prism-token.prism-char,
	.prism-token.prism-builtin,
	.prism-token.prism-inserted {
		color: #690;
	}

	.prism-token.prism-operator,
	.prism-token.prism-entity,
	.prism-token.prism-url,
	.prism-language-css .prism-token.prism-string,
	.prism-style .prism-token.prism-string {
		color: #9a6e3a;
		/* This background color was intended by the author of this theme. */
		background: hsla(0, 0%, 100%, 0.5);
	}

	.prism-token.prism-atrule,
	.prism-token.prism-attr-value,
	.prism-token.prism-keyword {
		color: #07a;
	}

	.prism-token.prism-function,
	.prism-token.prism-class-name {
		color: #dd4a68;
	}

	.prism-token.prism-regex,
	.prism-token.prism-important,
	.prism-token.prism-variable {
		color: #e90;
	}

	.prism-token.prism-important,
	.prism-token.prism-bold {
		font-weight: bold;
	}
	.prism-token.prism-italic {
		font-style: italic;
	}

	.prism-token.prism-entity {
		cursor: help;
	}
}

html[data-color-scheme="dark"] {
	/* PrismJS 1.29.0
	https://prismjs.com/download.html#themes=prism-okaidia */
	/**
	* okaidia theme for JavaScript, CSS and HTML
	* Loosely based on Monokai textmate theme by http://www.monokai.nl/
	* @author ocodia
	*/
	.prism-token.prism-comment,
	.prism-token.prism-prolog,
	.prism-token.prism-doctype,
	.prism-token.prism-cdata {
		color: #8292a2;
	}

	.prism-token.prism-punctuation {
		color: #f8f8f2;
	}

	.prism-token.prism-namespace {
		opacity: 0.7;
	}

	.prism-token.prism-property,
	.prism-token.prism-tag,
	.prism-token.prism-constant,
	.prism-token.prism-symbol,
	.prism-token.prism-deleted {
		color: #f92672;
	}

	.prism-token.prism-boolean,
	.prism-token.prism-number {
		color: #ae81ff;
	}

	.prism-token.prism-selector,
	.prism-token.prism-attr-name,
	.prism-token.prism-string,
	.prism-token.prism-char,
	.prism-token.prism-builtin,
	.prism-token.prism-inserted {
		color: #a6e22e;
	}

	.prism-token.prism-operator,
	.prism-token.prism-entity,
	.prism-token.prism-url,
	.prism-language-css .prism-token.prism-string,
	.prism-style .prism-token.prism-string,
	.prism-token.prism-variable {
		color: #f8f8f2;
	}

	.prism-token.prism-atrule,
	.prism-token.prism-attr-value,
	.prism-token.prism-function,
	.prism-token.prism-class-name {
		color: #e6db74;
	}

	.prism-token.prism-keyword {
		color: #66d9ef;
	}

	.prism-token.prism-regex,
	.prism-token.prism-important {
		color: #fd971f;
	}

	.prism-token.prism-important,
	.prism-token.prism-bold {
		font-weight: bold;
	}
	.prism-token.prism-italic {
		font-style: italic;
	}

	.prism-token.prism-entity {
		cursor: help;
	}
}
