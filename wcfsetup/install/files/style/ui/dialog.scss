.dialogOverlay {
	background-color: rgba(0, 0, 0, 0.4);
	bottom: 0;
	left: 0;
	opacity: 0;
	position: fixed;
	right: 0;
	top: 0;
	transition: opacity 0.12s linear, visibility 0s linear 0.3s;
	visibility: hidden;
	will-change: opacity;
	z-index: 399;

	&[aria-hidden="false"] {
		opacity: 1;
		transition-delay: 0s;
		visibility: visible;
	}

	@include screen-sm-up {
		display: grid;
		grid-template-areas: "dialog";
	}
}

@keyframes wcfDialog {
	0% {
		visibility: visible;
		top: 8%;
	}
	100% {
		visibility: visible;
		top: 10%;
	}
}

@keyframes wcfDialogOut {
	0% {
		visibility: visible;
		top: 10%;
	}
	100% {
		visibility: hidden;
		top: 12%;
	}
}

.dialogContainer {
	background-color: var(--wcfContentBackground);
	color: var(--wcfContentText);
	z-index: 200;

	@include screen-xs {
		left: 0 !important;
		position: fixed;
		right: 0 !important;
		top: 0 !important;
	}

	@include screen-sm-up {
		align-self: flex-start;
		animation: wcfDialogOut 0.3s;
		animation-fill-mode: forwards;
		border-radius: 8px;
		box-shadow: rgb(0 0 0 / 20%) 0 12px 28px 0, rgb(0 0 0 / 10%) 0 2px 4px 0;
		grid-area: dialog;
		justify-self: center;
		max-height: 80%;
		max-width: 80%;
		min-width: 500px;
		position: absolute;

		// This is required to prevent dialogs from becoming
		// unncessarily wide by forcing text to wrap. We cannot
		// use `transform` to offset this indentation, because
		// this causes a blurry text rendering in Chromium.
		// The offset is calculated using a `ResizeObserver`.
		left: 50%;
		transform: translateX(var(--translate-x, 0));

		&[aria-hidden="false"] {
			animation: wcfDialog 0.3s;
			animation-fill-mode: forwards;
		}
	}

	&[aria-hidden="true"] {
		/* Child elements with `visibility: visible` will not be visually rendered, but pointer events are recognized. */
		pointer-events: none;
		visibility: hidden;
	}

	&[aria-hidden="false"] ~ .dialogContainer[aria-hidden="false"] {
		z-index: 50;
	}

	> header {
		display: flex;

		@include screen-sm-down {
			padding: 10px;
		}

		@include screen-md-up {
			padding: 20px;
		}

		> span {
			flex: 1 auto;

			@include wcfFontHeadline;

			font-weight: 600;
		}

		> .dialogCloseButton {
			align-self: center;
			flex: 0 0 auto;

			&:hover > .icon {
				color: $wcfHeaderLinkActive;
			}

			> .icon {
				color: $wcfHeaderLink;
			}
		}
	}

	> .dialogContent {
		background-color: $wcfContentBackground;
		overflow: auto;

		// do not use `-webkit-overflow-scrolling` as it will cut off content in iOS Safari

		&:not(.dialogContentNoPadding) {
			@include screen-sm-down {
				padding: 10px;
			}

			@include screen-md-up {
				padding: 0 20px;
			}

			&::after {
				content: "";
				display: block;
				height: 20px;
			}

			&.dialogForm::after {
				height: 17px;
			}
		}

		&:not(.dialogForm) {
			border-bottom-left-radius: 8px;
			border-bottom-right-radius: 8px;
		}

		dl:not(.plain) {
			> dt {
				float: none;
				text-align: left;
				width: auto !important;

				&:empty {
					margin-bottom: 0;
				}
			}

			> dd {
				margin-left: 0 !important;
			}
		}

		.dialogFormSubmit {
			background-color: var(--wcfContentBackground);
			bottom: 0;
			border-radius: 0 0 8px 8px;
			color: var(--wcfContentText);
			column-gap: 10px;
			display: flex;
			flex-direction: row-reverse;
			left: 0;
			margin-bottom: 0;
			padding: 20px;
			position: absolute;
			right: 0;

			.button,
			input {
				margin: 0 !important;
			}
		}

		> div {
			> .section:first-child,
			> fieldset:first-child {
				margin-top: 0;
			}

			> div,
			> section,
			> form {
				> .section:first-child,
				> fieldset:first-child {
					margin-top: 0;
				}
			}
		}
	}
}

/* static dialogs */
.jsStaticDialogContent {
	display: none;
}

.spinner {
	background-color: rgb(255, 255, 255);
	border: 1px solid rgb(204, 204, 204);
	box-shadow: 2px 2px 5px 0 rgba(0, 0, 0, 0.2);
	color: rgb(44, 62, 80);
	left: 50%;
	opacity: 0;
	padding: 10px;
	position: fixed;
	text-align: center;
	top: 200px;
	transform: translateX(-50%);
	transition: visibility 0s linear 0.12s, opacity 0.12s linear;
	visibility: hidden;
	z-index: 401;

	&.active {
		opacity: 1;
		visibility: visible;

		transition-delay: 0s;
	}

	> span:not(.icon) {
		display: block;
		margin-top: 5px;
	}
}

/* notification overlay */
#systemNotification {
	left: 0;
	opacity: 0;
	pointer-events: none;
	position: fixed;
	top: 0;
	transform: translateY(-100%);
	transition: visibility 0.12s linear 0.12s, transform 0.12s linear, opacity 0.12s linear;
	visibility: hidden;
	width: 100%;
	z-index: 460;

	&.active {
		opacity: 1;
		transform: translateY(0%);
		transition-delay: 0s;
		visibility: visible;
	}

	> p {
		border-top-left-radius: 0;
		border-top-right-radius: 0;
		border-top-width: 0;
		cursor: pointer;
		display: table;
		margin: 0 auto;
		max-width: 80%;
		pointer-events: auto;

		//.userSelectNone;
	}
}

/* highlight objects in confirmation messages */
.confirmationObject {
	font-weight: 600;
}

/* New dialog API */
@keyframes dialog {
	0% {
		transform: translateY(-20px);
	}
	100% {
		transform: translateY(0);
	}
}

.dialog {
	--dialog-border-radius: 8px;
	--dialog-padding: 20px;

	animation: 0.24s dialog;
	background-color: transparent;
	border-radius: var(--dialog-border-radius);
	border-width: 0;
	box-shadow: rgb(0 0 0 / 20%) 0 12px 28px 0, rgb(0 0 0 / 10%) 0 2px 4px 0;
	display: flex;
	flex-direction: column;
	max-height: 80%;
	max-width: 80%;
	min-height: 0;
	min-width: 500px;
	padding: 0;
}

.dialog:not([open]) {
	display: none;
}

@keyframes dialogBackdrop {
	0% {
		opacity: 0;
	}
	100% {
		opacity: 1;
	}
}

.dialog::backdrop {
	animation: 0.24s dialogBackdrop;
	background-color: rgba(0, 0, 0, 0.34);
}

.dialog__document {
	background-color: var(--wcfContentBackground);
	border-radius: var(--dialog-border-radius);
	color: var(--wcfContentText);
	display: flex;
	flex-direction: column;
	min-height: 0;
	padding: var(--dialog-padding);
}

.dialog__header {
	column-gap: 10px;
	display: grid;
	grid-template-columns: auto max-content;
	grid-template-areas: "title closeButton";
	margin-bottom: var(--dialog-padding);
}

.dialog__title {
	grid-area: title;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;

	@include wcfFontHeadline;

	font-weight: 600;
}

.dialog__closeButton {
	grid-area: closeButton;
}

.dialog__content {
	margin: 0 calc(var(--dialog-padding) * -1);
	overflow: auto;
	padding: 0 var(--dialog-padding);
}

.dialog__form {
	display: flex;
	flex-direction: column;
	min-height: 0;
}

.dialog[role="alertdialog"] {
	max-width: 500px;
}

.dialog[role="alertdialog"] .dialog__header {
	column-gap: 0;
	grid-template-columns: auto;
	grid-template-areas: "title";
}

.dialog[role="alertdialog"] .dialog__title {
	overflow: initial;
	text-overflow: initial;
	white-space: initial;
}

.formControl {
	column-gap: 10px;
	display: grid;
	grid-template-areas: "extra cancel primary";
	grid-template-columns: auto max-content max-content;
	margin-top: 30px;
}

.formControl__button--primary {
	grid-area: primary;
}

.formControl__button--cancel {
	grid-area: cancel;
}

.formControl__button--extra {
	grid-area: extra;
	margin-right: auto;
}

/* Sections inside dialogs */
.dialogContent,
.dialog__content {
	.section .sectionTitle {
		@include wcfFontDefault;

		border-bottom-width: 0;
		font-weight: 600;
		padding-bottom: 0;
	}

	.section:not(:first-child) {
		border-top: 1px solid var(--wcfContentBorderInner);
		margin-top: 20px;
		padding-top: 20px;
	}
}
